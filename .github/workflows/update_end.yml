name: Update End Date for Open Issues

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC
  workflow_dispatch:  # Also allow manual trigger

jobs:
  update-end-dates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const projectNumber = 3;
            const orgOrUser = 'asunboi';
            
            // Get today's date in YYYY-MM-DD format
            const today = new Date().toISOString().split('T')[0];
            console.log(`Today's date: ${today}`);
            
            // Get project info
            const projectQuery = `
              query($org: String!, $number: Int!) {
                user(login: $org) {
                  projectV2(number: $number) {
                    id
                    fields(first: 20) {
                      nodes {
                        ... on ProjectV2Field {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            `;
            
            const projectData = await github.graphql(projectQuery, {
              org: orgOrUser,
              number: projectNumber
            });
            
            const projectId = projectData.user.projectV2.id;
            const endDateField = projectData.user.projectV2.fields.nodes.find(f => f.name === 'End Date');
            
            if (!endDateField) {
              throw new Error('End Date field not found');
            }
            
            console.log(`Project ID: ${projectId}`);
            console.log(`End Date Field ID: ${endDateField.id}`);
            
            // Get all open issues
            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',  // Only open issues
              per_page: 100
            });
            
            console.log(`Found ${issues.length} open issues`);
            
            for (const issue of issues) {
              // Get project item for this issue
              const itemQuery = `
                query($owner: String!, $repo: String!, $issueNumber: Int!) {
                  repository(owner: $owner, name: $repo) {
                    issue(number: $issueNumber) {
                      projectItems(first: 10) {
                        nodes {
                          id
                          project {
                            id
                          }
                        }
                      }
                    }
                  }
                }
              `;
              
              const itemData = await github.graphql(itemQuery, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issueNumber: issue.number
              });
              
              const projectItem = itemData.repository.issue.projectItems.nodes.find(
                item => item.project.id === projectId
              );
              
              if (projectItem) {
                const updateMutation = `
                  mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: Date!) {
                    updateProjectV2ItemFieldValue(input: {
                      projectId: $projectId
                      itemId: $itemId
                      fieldId: $fieldId
                      value: { date: $value }
                    }) {
                      projectV2Item {
                        id
                      }
                    }
                  }
                `;
                
                await github.graphql(updateMutation, {
                  projectId: projectId,
                  itemId: projectItem.id,
                  fieldId: endDateField.id,
                  value: today
                });
                
                console.log(`✓ Updated #${issue.number} end date to ${today}`);
              } else {
                console.log(`⚠ Issue #${issue.number} not in project`);
              }
            }
            
            console.log('✅ Finished updating end dates for all open issues');
