name: Backfill Project Dates

on:
  workflow_dispatch:

jobs:
  backfill_dates:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      issues: read
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Backfill Start/End Dates in Project
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}  # Must be a PAT with repo + project scopes
          script: |
            const org = context.repo.owner;
            const repo = context.repo.repo;
            const projectName = "GET";

            // 1. Find the project
            const { organization } = await github.graphql(`
              query($org: String!, $proj: String!) {
                organization(login: $org) {
                  projectsV2(first: 10, query: $proj) {
                    nodes {
                      id
                      title
                    }
                  }
                }
              }`,
              { org, proj: projectName }
            );
            const proj = organization.projectsV2.nodes.find(p => p.title === projectName);
            if (!proj) throw new Error(`Project "${projectName}" not found`);

            // 2. Get field IDs
            const { node } = await github.graphql(`
              query($projId: ID!) {
                node(id: $projId) {
                  ... on ProjectV2 {
                    fields(first: 10) {
                      nodes {
                        id
                        name
                        dataType
                      }
                    }
                  }
                }
              }`,
              { projId: proj.id }
            );
            const fields = node.fields.nodes;
            const startField = fields.find(f => f.name === "Start Date" && f.dataType === "DATE");
            const endField   = fields.find(f => f.name === "End Date" && f.dataType === "DATE");
            if (!startField || !endField) throw new Error("Start Date or End Date field missing in project");

            // 3. Get issues + project item IDs
            const issues = await github.paginate(
              github.rest.issues.listForRepo,
              { owner: org, repo, state: "all", per_page: 100 }
            );

            for (const issue of issues) {
              const created = issue.created_at.split("T")[0];
              const closed = issue.closed_at ? issue.closed_at.split("T")[0] : null;

              // Find project's itemId
              const { repository } = await github.graphql(`
                query($owner: String!, $repo: String!, $num: Int!) {
                  repository(owner: $owner, name: $repo) {
                    issue(number: $num) {
                      projectItems(first: 5) {
                        nodes { id, project { title } }
                      }
                    }
                  }
                }`,
                { owner: org, repo, num: issue.number }
              );
              const item = repository.issue.projectItems.nodes.find(pi => pi.project.title === projectName);
              if (!item) continue;

              // 4. Update Start Date
              await github.graphql(`
                mutation($itemId: ID!, $fieldId: ID!, $date: String!) {
                  updateProjectV2ItemFieldValue(input: {
                    projectId: "${proj.id}"
                    itemId: $itemId
                    fieldId: $fieldId
                    value: {date: $date}
                  }) { projectV2Item { id } }
                }`,
                { itemId: item.id, fieldId: startField.id, date: created }
              );

              // 5. Update End Date if available
              if (closed) {
                await github.graphql(`
                  mutation($itemId: ID!, $fieldId: ID!, $date: String!) {
                    updateProjectV2ItemFieldValue(input: {
                      projectId: "${proj.id}"
                      itemId: $itemId
                      fieldId: $fieldId
                      value: {date: $date}
                    }) { projectV2Item { id } }
                  }`,
                  { itemId: item.id, fieldId: endField.id, date: closed }
                );
              }

              console.log(`✔️ Updated Issue #${issue.number}`);
            }